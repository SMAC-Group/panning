% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/panning_functions.R
\name{CVmFold}
\alias{CVmFold}
\title{m-fold Cross-validation for Generalised Linear Models and specific divergence}
\usage{
CVmFold(y, X, m = 10L, K = 10L, family, type = NULL, divergence,
  C0 = 0.5, W = NULL, increasing = FALSE, trace = TRUE, ...)
}
\arguments{
\item{y}{is a (n x 1) vector of response variable.}

\item{X}{is a (n x p) matrice of predictors.}

\item{m}{is the number of groups.}

\item{K}{is the number of repetitions of the spliting.}

\item{family}{the family object for \code{\link[stats]{glm}} or \code{family = "multinomial"}
to use \code{\link[nnet]{multinom}}.}

\item{type}{the type of prediction required for \code{\link[stats]{predict}} function.}

\item{divergence}{the type of divergence. \code{divergence = "L1"} is the L1-norm error.
\code{divergence = "sq.error"} is the squared error. \code{divergence = "classification"} gives the classification error.}

\item{C0}{is a cutoff value between (0,1)}

\item{W}{is a matrix of weights for classification errors (if \code{divergence = "classification"}).
If \code{W=NULL} (default), \code{W} has 0 elements in the diagonal (good predictions) and 1s elsewhere.}

\item{increasing}{is a boolean characterising \code{y} (see details).}

\item{trace}{if \code{trace = TRUE}, hide the warnings of the fitting method.}

\item{...}{additional arguments affecting the fitting method (see \code{\link[stats]{glm}}
or \code{\link[nnet]{multinom}}).}
}
\value{
\code{CVmFold} returns a single numeric value assessing the estimated prediction error.
}
\description{
\code{CVmFold} returns the m-fold Cross-validation prediction error of different divergences
for generalised linear models.
}
\details{
This function computes the m-fold Cross-validation (CV) of a Generalised Linear Models \code{family}
to assesses the prediction error according to a specific \code{divergence}. It is called inside
\code{\link[panning]{InitialStep}} and \code{\link[panning]{GeneralStep}} functions, the two
main functions of the Panning Algorithm.

In the case \code{divergence = "classification"}, it is possible to have asymmetric
classification errors by setting the \code{W} matrix (rows: estimated y; columns: true y) (see the
example below). For logistic regression (runned with \code{\link[stats]{glm}}), the cutoff
value \code{C0} determines whether the prediction takes value 0 (prediction <=\code{C0}) or 1
(prediction >\code{C0}). For multinomial regression, \code{increasing=TRUE} states
\code{y}>=1 with unit increments (it makes \code{\link[panning]{CVmFold}} runs faster).

Attention should be taken on how the estimated values of \code{y} should be returned,
and choose \code{type} accordingly. See the example below on logistic regression.
}
\examples{
\dontrun{
### Binary data
# load the data
library(MASS)
data("birthwt")
y <- birthwt$low
X <- as.matrix(birthwt)[,-1]

## logistic regression with glm()
# L1 error
set.seed(123)
CVmFold(y = y, X = X, family = binomial(link = 'logit'), divergence = "L1",
     type = "response", trace = FALSE, control = list(maxit=100) )

# Squared error
set.seed(123)
CVmFold(y = y, X = X, family = binomial(link = 'logit'), divergence = "sq.error",
     type = "response", trace = FALSE, control = list(maxit=100) )

# misclassification error
set.seed(123)
CVmFold(y = y, X = X, family = binomial(link = 'logit'), divergence = "classification",
     type = "response", trace = FALSE, control = list(maxit=100) )

# asymmetric misclassification error
Weight <- matrix(c(0,1.5,0.5,0),2,2)
set.seed(123)
CVmFold(y = y, X = X, family = binomial(link = 'logit'), divergence = "classification",
     W = Weight, type = "response", trace = FALSE, control = list(maxit=100) )

## logistic regression with multinom()
# L1 error
set.seed(123)
CVmFold(y = y, X = X, family = "multinomial", divergence = "L1", type = "probs" )

# Squared Error
set.seed(123)
CVmFold(y = y, X = X, family = "multinomial", divergence = "sq.error", type = "probs" )

# misclassification error
y <- y+1L
set.seed(123)
CVmFold(y = y, X = X, family = "multinomial", divergence = "classification",
     type = "class", increasing = TRUE )

# asymmetric misclassification error
set.seed(123)
CVmFold(y = y, X = X, family = "multinomial", divergence = "classification",
     type = "class", W = Weight, increasing = TRUE )

### Count data
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
set.seed(123)
CVmFold(y = counts, X = cbind(outcome, treatment), m = 3, K = 30, family = poisson(),
     divergence = "L1" )
}
}
\author{
Samuel Orso \email{Samuel.Orso@unige.ch}
}
\seealso{
\code{\link[stats]{glm}}, \code{\link[stats]{family}}, \code{\link[stats]{predict.glm}},
\code{\link[panning]{InitialStep}}, \code{\link[panning]{GeneralStep}}
}

